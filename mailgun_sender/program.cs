using System;
using System.IO;
using RestSharp;
using RestSharp.Authenticators;

// ====================== –ß—Ç–µ–Ω–∏–µ .env –≤—Ä—É—á–Ω—É—é ======================
var envVariables = new Dictionary<string, string>();
if (File.Exists(".env"))
{
    foreach (var line in File.ReadAllLines(".env"))
    {
        var parts = line.Split('=', 2, StringSplitOptions.RemoveEmptyEntries);
        if (parts.Length == 2)
        {
            envVariables[parts[0].Trim()] = parts[1].Trim().Trim('"');
        }
    }
}
else
{
    Console.WriteLine("‚ùå –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω!");
    return;
}

// ====================== –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö ======================
var apiKey = envVariables["MAILGUN_API_KEY"];
var domain = envVariables["MAILGUN_DOMAIN"];
var from = envVariables.GetValueOrDefault("MAILGUN_FROM", $"postmaster@{domain}");
var to = envVariables["MAILGUN_TO"];

// ====================== –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–∏—Å—å–º–∞ ======================
try 
{
    var client = new RestClient(
        new RestClientOptions("https://api.mailgun.net") 
        { 
            Authenticator = new HttpBasicAuthenticator("api", apiKey) 
        }
    );

    var request = new RestRequest($"/v3/{domain}/messages", Method.Post);
    request.AddParameter("from", from);
    request.AddParameter("to", to);
    request.AddParameter("subject", "–ü–∏—Å—å–º–æ –±–µ–∑ DotNetEnv");
    request.AddParameter("text", "–†–∞–±–æ—Ç–∞–µ—Ç –¥–∞–∂–µ –±–µ–∑ —Å—Ç–æ—Ä–æ–Ω–Ω–∏—Ö –ø–∞–∫–µ—Ç–æ–≤!");

    var response = await client.ExecuteAsync(request);
    Console.WriteLine(response.IsSuccessful ? "‚úÖ –ü–∏—Å—å–º–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!" : "‚ùå –û—à–∏–±–∫–∞: " + response.ErrorMessage);
}
catch (Exception ex) 
{
    Console.WriteLine("üî• –û—à–∏–±–∫–∞: " + ex.Message);
}
